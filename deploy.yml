- name: Deploy stack
  hosts: all
  become: yes
  tasks:
    - name: Install Docker
      apt:
        name:
          - docker.io
          - python3-docker
    - name: Start Docker
      systemd:
        name: docker
        enabled: yes
        state: started
    - name: Create directories
      block:
        - name: Base directory
          file:
            state: directory
            path: /project
        - name: DB directory
          file:
            state: directory
            path: /project/db
        - name: Server directory
          file:
            state: directory
            path: /project/server
    - name: Login to Docker GH registry
      docker_login:
        registry_url: docker.pkg.github.com
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"
    - name: Start MySQL container
      docker_container:
        name: db
        image: mysql:8
        cleanup: yes
        restart_policy: always
        env:
          MYSQL_DATABASE: "{{ db_name }}"
          MYSQL_USER: "{{ db_user }}"
          MYSQL_PASSWORD: "{{ db_pass }}"
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
        volumes:
          - "/project/db:/var/lib/mysql"
    - name: Wait for database
      pause:
        seconds: 20
    - name: Start server container
      docker_container:
        name: server
        image: "{{ docker_image }}"
        cleanup: yes
        recreate: yes
        pull: yes
        restart_policy: always
        env:
          TF_CPP_MIN_LOG_LEVEL: "3"
          GOOGLE_APPLICATION_CREDENTIALS: "/firebase.json"
          SERVER_ACCESS_TOKEN: "{{ server_access_token }}"
          SERVER_PORT: "80"
          DB_NAME: "{{ db_name }}"
          DB_USER: "{{ db_user }}"
          DB_PASS: "{{ db_pass }}"
          DB_ADDR: db
        volumes:
          - "/project/server/firebase.json:/firebase.json:ro"
        ports:
          - 80:80
        links:
          - db
    - name: Prune Docker leftovers
      docker_prune:
        images: yes
        containers: yes
