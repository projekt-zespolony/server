{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Server","title":"Server"},{"location":"#server","text":"","title":"Server"},{"location":"api/","text":"API Get status Returns server version and source git commit from which it was built. Endpoint : GET / Response : HTTP/ 1.1 200 OK { \"version\" : \"refs/heads/master\" , \"commit\" : \"88694ddfb91153cd470bec20d23aee360feccdf7\" } Get latest sensors readings Returns newest sensors readings found in the database. Endpoint : GET /sensors Response : HTTP/ 1.1 200 OK { \"timestamp\" : 1586532636 , \"temperature\" : 12 , \"pressure\" : 1001.5 , \"humidity\" : 41 , \"gas\" : 14 } Create new sensors readings Create a new entry in the database with given sensors readings. Endpoint : POST /sensors Headers : Name Value Content-Type application/json Authentication Bearer $TOKEN Data : Parameter Description Unit Default timestamp Unix timestamp seconds current temperature Temperature celsius 0 humidity Humidity percentage 0 pressure Pressure hPa 0 gas Gas kOhm 0 Response : HTTP/ 1.1 201 Created { \"timestamp\" : 1586532636 , \"temperature\" : 12 , \"pressure\" : 1001.5 , \"humidity\" : 41 , \"gas\" : 14 } Common errors Missing Authorization header: HTTP/ 1.1 400 Bad Request { \"message\" : \"missing key in request header\" } Wrong token: HTTP/ 1.1 401 Unauthorized { \"message\" : \"Unauthorized\" } Wrong data format: HTTP/ 1.1 500 Internal Server Error { \"message\" : \"Internal Server Errror\" }","title":"API"},{"location":"api/#api","text":"","title":"API"},{"location":"api/#get-status","text":"Returns server version and source git commit from which it was built. Endpoint : GET / Response : HTTP/ 1.1 200 OK { \"version\" : \"refs/heads/master\" , \"commit\" : \"88694ddfb91153cd470bec20d23aee360feccdf7\" }","title":"Get status"},{"location":"api/#get-latest-sensors-readings","text":"Returns newest sensors readings found in the database. Endpoint : GET /sensors Response : HTTP/ 1.1 200 OK { \"timestamp\" : 1586532636 , \"temperature\" : 12 , \"pressure\" : 1001.5 , \"humidity\" : 41 , \"gas\" : 14 }","title":"Get latest sensors readings"},{"location":"api/#create-new-sensors-readings","text":"Create a new entry in the database with given sensors readings. Endpoint : POST /sensors Headers : Name Value Content-Type application/json Authentication Bearer $TOKEN Data : Parameter Description Unit Default timestamp Unix timestamp seconds current temperature Temperature celsius 0 humidity Humidity percentage 0 pressure Pressure hPa 0 gas Gas kOhm 0 Response : HTTP/ 1.1 201 Created { \"timestamp\" : 1586532636 , \"temperature\" : 12 , \"pressure\" : 1001.5 , \"humidity\" : 41 , \"gas\" : 14 }","title":"Create new sensors readings"},{"location":"api/#common-errors","text":"Missing Authorization header: HTTP/ 1.1 400 Bad Request { \"message\" : \"missing key in request header\" } Wrong token: HTTP/ 1.1 401 Unauthorized { \"message\" : \"Unauthorized\" } Wrong data format: HTTP/ 1.1 500 Internal Server Error { \"message\" : \"Internal Server Errror\" }","title":"Common errors"},{"location":"ci-cd/","text":"CI/CD Below flowchat shows the CI/CD process of the server. Flowchart","title":"CI/CD"},{"location":"ci-cd/#cicd","text":"Below flowchat shows the CI/CD process of the server.","title":"CI/CD"},{"location":"ci-cd/#flowchart","text":"","title":"Flowchart"},{"location":"code/","text":"Code Code documentation is available here .","title":"Code"},{"location":"code/#code","text":"Code documentation is available here .","title":"Code"},{"location":"env-vars/","text":"Environment variables DB_USER - database user name DB_PASS - database user password DB_NAME - database name DB_ADDR - database address (host:port) SERVER_ACCESS_TOKEN - token for POST requests SERVER_PORT - on which port the HTTP server should listen (443 for HTTPS) SERVER_CERTS_CACHE_DIR - where to store HTTPS certificates","title":"Environment variables"},{"location":"env-vars/#environment-variables","text":"DB_USER - database user name DB_PASS - database user password DB_NAME - database name DB_ADDR - database address (host:port) SERVER_ACCESS_TOKEN - token for POST requests SERVER_PORT - on which port the HTTP server should listen (443 for HTTPS) SERVER_CERTS_CACHE_DIR - where to store HTTPS certificates","title":"Environment variables"}]}